--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Stratix II" IGNORE_CARRY_BUFFERS="OFF" LPM_NUMWORDS=256 LPM_SHOWAHEAD="ON" LPM_WIDTH=80 LPM_WIDTH_R=80 LPM_WIDTHU=8 LPM_WIDTHU_R=8 MAXIMIZE_SPEED=5 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=4 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRITE_ACLR_SYNCH="OFF" WRSYNC_DELAYPIPE=4 aclr data q rdclk rdempty rdfull rdreq wrclk wrreq CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Stratix II" LOW_POWER_MODE="AUTO" lpm_hint="MAXIMIZE_SPEED=5," ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 9.0 cbx_a_gray2bin 2008:05:19:09:32:04:SJ cbx_a_graycounter 2008:05:19:09:39:53:SJ cbx_altdpram 2008:05:19:10:27:12:SJ cbx_altsyncram 2008:11:06:10:05:41:SJ cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_dcfifo 2009:01:16:15:51:00:SJ cbx_fifo_common 2008:05:19:10:54:06:SJ cbx_flex10ke 2008:05:19:10:53:03:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_lpm_compare 2009:02:03:01:43:16:SJ cbx_lpm_counter 2008:05:19:10:42:20:SJ cbx_lpm_decode 2008:05:19:10:39:27:SJ cbx_lpm_mux 2008:05:19:10:30:36:SJ cbx_mgl 2009:01:29:16:12:07:SJ cbx_scfifo 2008:05:19:10:25:30:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ cbx_stratixiii 2008:12:24:11:49:14:SJ cbx_util_mgl 2008:11:21:14:58:47:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION a_graycounter_i96 (aclr, clock, cnt_en)
RETURNS ( q[8..0]);
FUNCTION a_graycounter_9gc (aclr, clock, cnt_en)
RETURNS ( q[8..0]);
FUNCTION a_graycounter_8gc (aclr, clock, cnt_en)
RETURNS ( q[8..0]);
FUNCTION altsyncram_hlu (address_a[7..0], address_b[7..0], addressstall_b, clock0, clock1, data_a[79..0], wren_a)
RETURNS ( q_b[79..0]);
FUNCTION dffpipe_ngh (clock, clrn, d[0..0])
RETURNS ( q[0..0]);
FUNCTION alt_synch_pipe_kcb (clock, clrn, d[8..0])
RETURNS ( q[8..0]);
FUNCTION alt_synch_pipe_oc8 (clock, clrn, d[8..0])
RETURNS ( q[8..0]);
FUNCTION cmpr_v26 (dataa[8..0], datab[8..0])
RETURNS ( aeb);

--synthesis_resources = ram_bits (AUTO) 20480 reg 55 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=s102;{-to p0addr} POWER_UP_LEVEL=LOW;{-to rdptr_g} suppress_da_rule_internal=r105;-name CUT ON -from rdptr_g -to ws_dgrp|dffpipe9|dffe10a;-name SDC_STATEMENT ""set_false_path -from *rdptr_g* -to *ws_dgrp|dffpipe_kd9:dffpipe9|dffe10a* "";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|dffpipe6|dffe7a;-name SDC_STATEMENT ""set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|dffpipe_jd9:dffpipe6|dffe7a* """;

SUBDESIGN dcfifo_34m1
( 
	aclr	:	input;
	data[79..0]	:	input;
	q[79..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdfull	:	output;
	rdreq	:	input;
	wrclk	:	input;
	wrreq	:	input;
) 
VARIABLE 
	rdptr_g1p : a_graycounter_i96;
	wrptr_g1p : a_graycounter_9gc;
	wrptr_gp : a_graycounter_8gc;
	fifo_ram : altsyncram_hlu;
	delayed_wrptr_g[8..0] : dffe;
	p0addr : dffe
		WITH (
			power_up = "low"
		);
	rdptr_g[8..0] : dffe;
	rdaclr : dffpipe_ngh;
	rs_dgwp : alt_synch_pipe_kcb;
	ws_dgrp : alt_synch_pipe_oc8;
	rdempty_eq_comp : cmpr_v26;
	rdfull_eq_comp : cmpr_v26;
	wrfull_eq_comp : cmpr_v26;
	int_rdempty	: WIRE;
	int_rdfull	: WIRE;
	int_wrfull	: WIRE;
	ram_address_a[7..0]	: WIRE;
	ram_address_b[7..0]	: WIRE;
	rdcnt_addr_ena	: WIRE;
	rdptr_gs[8..0]	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_gs[8..0]	: WIRE;

BEGIN 
	rdptr_g1p.aclr = (! rdaclr.q[]);
	rdptr_g1p.clock = rdclk;
	rdptr_g1p.cnt_en = rdcnt_addr_ena;
	wrptr_g1p.aclr = aclr;
	wrptr_g1p.clock = wrclk;
	wrptr_g1p.cnt_en = valid_wrreq;
	wrptr_gp.aclr = aclr;
	wrptr_gp.clock = wrclk;
	wrptr_gp.cnt_en = valid_wrreq;
	fifo_ram.address_a[] = ram_address_a[];
	fifo_ram.address_b[] = ram_address_b[];
	fifo_ram.addressstall_b = (! rdcnt_addr_ena);
	fifo_ram.clock0 = wrclk;
	fifo_ram.clock1 = rdclk;
	fifo_ram.data_a[] = data[];
	fifo_ram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].clrn = (! aclr);
	delayed_wrptr_g[].d = wrptr_gp.q[];
	p0addr.clk = rdclk;
	p0addr.clrn = rdaclr.q[];
	p0addr.d = B"1";
	rdptr_g[].clk = rdclk;
	rdptr_g[].clrn = (! aclr);
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	rdaclr.clock = (! rdclk);
	rdaclr.clrn = (! aclr);
	rdaclr.d[] = B"1";
	rs_dgwp.clock = rdclk;
	rs_dgwp.clrn = (! aclr);
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	ws_dgrp.clock = wrclk;
	ws_dgrp.clrn = (! aclr);
	ws_dgrp.d[] = rdptr_g[].q;
	rdempty_eq_comp.dataa[] = rs_dgwp.q[];
	rdempty_eq_comp.datab[] = rdptr_g[].q;
	rdfull_eq_comp.dataa[] = rs_dgwp.q[];
	rdfull_eq_comp.datab[] = rdptr_gs[];
	wrfull_eq_comp.dataa[] = ws_dgrp.q[];
	wrfull_eq_comp.datab[] = wrptr_gs[];
	int_rdempty = rdempty_eq_comp.aeb;
	int_rdfull = rdfull_eq_comp.aeb;
	int_wrfull = wrfull_eq_comp.aeb;
	q[] = fifo_ram.q_b[];
	ram_address_a[] = ( (wrptr_gp.q[8..8] $ wrptr_gp.q[7..7]), wrptr_gp.q[6..0]);
	ram_address_b[] = ( (rdptr_g1p.q[8..8] $ rdptr_g1p.q[7..7]), rdptr_g1p.q[6..0]);
	rdcnt_addr_ena = (valid_rdreq # (! p0addr.q));
	rdempty = int_rdempty;
	rdfull = int_rdfull;
	rdptr_gs[] = ( (! rdptr_g[8..8].q), (! rdptr_g[7..7].q), rdptr_g[6..0].q);
	valid_rdreq = (rdreq & (! int_rdempty));
	valid_wrreq = (wrreq & (! int_wrfull));
	wrptr_gs[] = ( (! wrptr_gp.q[8..8]), (! wrptr_gp.q[7..7]), wrptr_gp.q[6..0]);
END;
--VALID FILE
